### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  id: Int!
  user: User!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

type Customer {
  createdAt: DateTime
  id: Int!
  slug: String!
  users: [User]
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""An arbitrary-precision Decimal type"""
scalar Decimal

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createCustomer(slug: String!): Customer!
  logout: Boolean!
  signup(customerSlug: String!, email: String!, firstName: String!, lastName: String!, password: String!, role: String): AuthPayload!
}

type Query {
  getCustomer(slug: String): Customer!
  getTicketContext(queries: String!): Ticket!
  getUser: User!
  getUsers: [User!]!
  login(email: String!, password: String!): AuthPayload!
}

type Ticket {
  context: String!
}

type User {
  customer: Customer
  email: String!
  firstName: String!
  id: Int!
  lastName: String!
  role: UserRole!
}

"""Roles that determine what permissions the user has access to."""
enum UserRole {
  ADMIN
  OPERATOR
}